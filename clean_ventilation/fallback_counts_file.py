import numpy as np
import pickle_utils as pu

def Counter(a):
    return a

l = [
    ( 0 , Counter({-1: 477136, 0: 98962, 1: 5827, 2: 271, 3: 234, 4: 63, 5: 20})),
    ( 1 , Counter({-1: 490186, 2: 27019, 0: 26700, 3: 17278, 1: 10164, 5: 4049, 4: 3353, 8: 1951, 7: 933, 6: 880})),
    ( 2 , Counter({-1: 476635, 1: 56419, 0: 29020, 2: 13870, 3: 5637, 5: 471, 4: 324, 6: 137})),
    ( 3 , Counter({-1: 489360, 0: 86750, 1: 6403})),
    ( 4 , Counter({-1: 522392, 0: 19849, 3: 16358, 2: 7981, 11: 4612, 5: 1789, 9: 1405, 1: 1366, 14: 947, 7: 723, 15: 664, 21: 543, 4: 526, 16: 511, 18: 460, 12: 391, 13: 334, 20: 310, 19: 214, 8: 210, 10: 204, 17: 196, 6: 168, 23: 92, 22: 87, 25: 59, 26: 58, 33: 25, 28: 16, 24: 14, 31: 5, 27: 3, 29: 1})),
    ( 5 , Counter({-1: 491601, 1: 38322, 2: 27786, 0: 20479, 3: 3004, 4: 1321})),
    ( 6 , Counter({-1: 526649, 0: 54268, 1: 1385, 4: 81, 6: 46, 5: 32, 2: 19, 8: 16, 3: 9, 7: 6, 9: 2})),
    ( 7 , Counter({-1: 502876, 0: 66904, 3: 6263, 1: 5875, 2: 553, 4: 42})),
    ( 8 , Counter({-1: 502678, 0: 71937, 1: 2709, 2: 1371, 4: 1004, 3: 1003, 7: 790, 5: 393, 8: 363, 6: 138, 9: 78, 10: 39, 11: 6, 12: 2, 13: 2})),
    ( 9 , Counter({-1: 481269, 1: 97943, 0: 2223, 2: 1078})),
    ( 10 , Counter({-1: 488369, 0: 52112, 1: 16441, 2: 12785, 3: 12447, 4: 359})),
    ( 11 , Counter({-1: 481656, 0: 39916, 1: 32179, 3: 14447, 2: 8209, 4: 6106})),
    ( 12 , Counter({-1: 487496, 0: 71008, 2: 9937, 1: 9928, 5: 1519, 4: 1035, 6: 861, 3: 489, 8: 153, 7: 85, 9: 2})),
    ( 13 , Counter({-1: 460530, 0: 121692, 1: 291})),
    ( 14 , Counter({-1: 517688, 0: 16416, 6: 12704, 3: 7691, 2: 5153, 1: 3871, 11: 3261, 14: 2425, 4: 2180, 7: 2017, 12: 1987, 9: 1499, 10: 1073, 21: 995, 17: 972, 5: 751, 16: 328, 13: 287, 20: 274, 22: 224, 19: 183, 15: 164, 8: 144, 18: 125, 23: 101})),
    ( 15 , Counter({-1: 528024, 1: 32080, 0: 14233, 2: 8150, 3: 26})),
    ( 16 , Counter({-1: 527566, 0: 29989, 1: 24958})),
    ( 17 , Counter({-1: 458488, 1: 81432, 0: 42593})),
    ( 18 , Counter({-1: 527801, 0: 53998, 2: 550, 1: 150, 3: 14})),
    ( 19 , Counter({-1: 527160, 0: 16110, 4: 15574, 1: 11717, 5: 5734, 2: 4718, 3: 1081, 6: 231, 7: 83, 10: 55, 8: 28, 9: 22})),
    ( 20 , Counter({-1: 527333, 9: 15790, 4: 15691, 3: 6755, 0: 4877, 1: 3127, 18: 1710, 14: 1669, 2: 1592, 7: 812, 8: 747, 5: 545, 12: 394, 22: 226, 11: 220, 10: 167, 6: 161, 19: 113, 15: 109, 21: 80, 20: 72, 26: 55, 13: 52, 29: 43, 25: 37, 16: 30, 30: 21, 23: 19, 24: 18, 28: 15, 32: 15, 27: 8, 17: 6, 33: 3, 31: 1})),
    ( 21 , Counter({-1: 456667, 0: 125670, 1: 176})),
    ( 22 , Counter({-1: 535831, 2: 19258, 4: 7587, 1: 6856, 5: 4513, 6: 2501, 8: 1395, 3: 1344, 7: 1288, 0: 1189, 9: 602, 10: 149})),
    ( 23 , Counter({-1: 456264, 0: 126028, 1: 221})),
    ( 24 , Counter({-1: 456203, 0: 126246, 1: 64})),
    ( 25 , Counter({-1: 526309, 0: 39825, 3: 8056, 2: 6766, 1: 1557})),
    ( 26 , Counter({-1: 515485, 3: 12389, 0: 7853, 4: 5359, 2: 3038, 17: 1873, 10: 1445, 47: 1429, 13: 1412, 49: 1367, 12: 1325, 36: 1293, 35: 1205, 26: 1191, 16: 1123, 8: 1083, 6: 988, 14: 969, 5: 944, 43: 915, 1: 838, 29: 814, 25 : 773, 9: 750, 70: 743, 11: 733, 41: 733, 32: 678, 31: 653, 37: 603, 52: 531, 45: 521, 63: 514, 62: 509, 50: 502, 56: 484, 54: 481, 19: 480, 60: 475, 42: 459, 72: 443, 20: 398, 33: 392, 48: 388, 59: 352, 39: 337, 57: 331, 76: 317, 18: 301, 24: 295, 21: 285, 22: 279, 66: 273, 27: 261, 68: 239, 69: 223, 55: 213, 44: 205, 28: 172, 38: 158, 23: 146, 30: 146, 34: 139, 7: 114, 61: 112, 53: 110, 46: 109, 81: 94, 51: 90, 74: 87, 40: 76, 65: 74, 67: 54, 79: 50, 73: 45, 78: 45, 58: 44, 64: 42, 75: 42, 77: 30, 71: 23, 82: 12, 15: 7})),
    ( 27 , Counter({-1: 470788, 0: 109010, 1: 2715})),
    ( 28 , Counter({-1: 465621, 0: 92942, 1: 22459, 2: 1309, 3: 182})),
    ( 29 , Counter({-1: 465713, 0: 80123, 1: 32364, 2: 4037, 3: 200, 4: 76})),
    ( 30 , Counter({-1: 520666, 0: 35719, 2: 9996, 1: 7406, 4: 2461, 5: 2415, 3: 1842, 7: 1330, 8: 374, 6: 200, 9: 53, 10: 51})),
    ( 31 , Counter({-1: 464881, 0: 114009, 1: 3157, 2: 466})),
    ( 32 , Counter({-1: 464506, 0: 79404, 1: 28615, 2: 9988})),
    ( 33 , Counter({-1: 463191, 1: 54001, 2: 19595, 3: 11201, 0: 10863, 5: 8204, 9: 5492, 4: 2834, 7: 2287, 8: 1344, 11: 1193, 10: 889, 12: 650, 6: 542, 13: 227})),
    ( 34 , Counter({-1: 462560, 0: 115759, 1: 4194})),
    ( 35 , Counter({-1: 462567, 0: 69374, 1: 29434, 2: 14518, 3: 6620})),
    ( 36 , Counter({-1: 461932, 0: 114070, 1: 5572, 2: 939})),
    ( 37 , Counter({-1: 461698, 1: 99344, 2: 16186, 0: 5285})),
    ( 38 , Counter({-1: 516504, 1: 22485, 4: 19976, 3: 11894, 5: 3459, 6: 3109, 8: 2034, 2: 1991, 7: 579, 0: 379, 9: 103})),
    ( 39 , Counter({-1: 459113, 0: 116775, 1: 3566, 3: 2307, 4: 571, 5: 92, 2: 50, 6: 39})),
    ( 40 , Counter({-1: 457262, 0: 106839, 2: 5666, 3: 5080, 6: 4446, 1: 2962, 7: 111, 5: 47, 4: 44, 9: 33, 8: 23})),
    ( 41 , Counter({-1: 458489, 0: 120756, 1: 3268})),
    ( 42 , Counter({-1: 498246, 0: 49796, 1: 26872, 2: 4553, 3: 947, 6: 830, 4: 668, 5: 601})),
    ( 43 , Counter({-1: 451936, 0: 121943, 1: 8634})),
    ( 44 , Counter({-1: 504117, 1: 43273, 0: 23402, 3: 5605, 4: 4470, 2: 1646})),
    ( 45 , Counter({-1: 502086, 1: 31927, 2: 19488, 0: 19375, 3: 5464, 5: 2601, 6: 1063, 4: 509})),
    ( 46 , Counter({-1: 441534, 0: 125012, 1: 15967})),
    ( 47 , Counter({-1: 500553, 2: 33271, 0: 19604, 1: 19016, 4: 5372, 3: 2955, 5: 896, 6: 846})),
    ( 48 , Counter({-1: 438025, 5: 121250, 0: 22523, 2: 396, 4: 184, 6: 93, 1: 30, 3: 12})),
    ( 49 , Counter({-1: 521277, 0: 43168, 4: 7937, 6: 5993, 3: 1566, 2: 938, 1: 728, 5: 449, 10: 179, 8: 165, 9: 37, 12: 29, 7: 22, 11: 14, 13: 11})),
    ( 50 , Counter({-1: 487527, 0: 93195, 1: 970, 2: 821})),
    ( 51 , Counter({-1: 486092, 0: 43842, 1: 23560, 3: 13952, 2: 13854, 4: 1213})),
    ( 52 , Counter({-1: 484320, 0: 96951, 1: 790, 2: 452})),
    ( 53 , Counter({-1: 478150, 0: 52686, 1: 25463, 4: 9827, 2: 6297, 5: 5610, 3: 4480})),
    ( 54 , Counter({-1: 485382, 1: 51041, 0: 28098, 6: 4569, 5: 3360, 3: 2676, 2: 2628, 7: 953, 12: 600, 13: 568, 9: 541, 4: 509, 8: 481, 11: 268, 17: 232, 15: 230, 10: 225, 16: 85, 14: 67})),
    ( 55 , Counter({-1: 445387, 0: 106874, 1: 26605, 3: 967, 6: 906, 2: 819, 4: 640, 5: 315})),
    ( 56 , Counter({-1: 480570, 0: 49038, 1: 36675, 2: 16230})),
    ( 57 , Counter({-1: 479430, 0: 95645, 2: 4893, 1: 2545})),
    ( 58 , Counter({-1: 478558, 0: 77963, 1: 14970, 4: 6168, 3: 3241, 8: 685, 7: 364, 2: 237, 5: 227, 6: 100})),
    ( 59 , Counter({-1: 474807, 0: 53136, 4: 20826, 2: 20346, 1: 6820, 3: 4782, 5: 1309, 6: 487})),
    ( 60 , Counter({-1: 472945, 0: 90864, 1: 10864, 3: 6620, 2: 667, 4: 553})),
    ( 61 , Counter({-1: 477341, 0: 95456, 1: 7557, 2: 1811, 3: 348})),
    ( 62 , Counter({-1: 476616, 1: 58119, 0: 47778})),
    ( 63 , Counter({-1: 456964, 0: 99267, 2: 18812, 1: 7470})),
    ( 64 , Counter({-1: 472997, 0: 54716, 1: 20883, 2: 19913, 3: 7286, 6: 4539, 5: 1346, 4: 833})),
    ( 65 , Counter({-1: 456322, 0: 99774, 2: 18726, 1: 7691})),
    ( 66 , Counter({-1: 455079, 0: 62548, 3: 37342, 1: 16445, 2: 4274, 4: 4175, 7: 1340, 6: 539, 5: 424, 8: 347})),
    ( 67 , Counter({-1: 454865, 2: 63304, 0: 36911, 1: 16361, 4: 4321, 3: 4190, 5: 1495, 6: 505, 7: 410, 8: 151})),
    ( 68 , Counter({-1: 467214, 0: 78989, 1: 16795, 5: 10065, 2: 5227, 6: 1306, 7: 1185, 3: 1001, 4: 718, 8: 13})),
    ( 69 , Counter({-1: 475050, 0: 63920, 2: 18523, 3: 12235, 1: 8744, 4: 4041})),
    ( 70 , Counter({-1: 461629, 0: 77285, 1: 29500, 2: 12975, 3: 1124})),
    ( 71 , Counter({-1: 463121, 0: 112704, 1: 3641, 2: 1119, 3: 713, 7: 481, 6: 336, 4: 167, 5: 148, 8: 79, 9: 4})),
    ( 72 , Counter({-1: 456560, 1: 60393, 0: 31037, 3: 13864, 2: 10374, 4: 9384, 5: 901})),
    ( 73 , Counter({-1: 445909, 1: 61266, 0: 56511, 2: 18827})),
    ( 74 , Counter({-1: 456334, 1: 60179, 3: 30281, 2: 14397, 0: 10813, 4: 9662, 5: 847})),
    ( 75 , Counter({-1: 456226, 4: 37144, 3: 29988, 1: 27949, 2: 15512, 0: 13840, 5: 1854})),
    ( 76 , Counter({-1: 456151, 4: 35917, 1: 30787, 3: 27990, 0: 16455, 2: 12972, 5: 2241})),
    ( 77 , Counter({-1: 445356, 0: 82391, 1: 44783, 2: 9983})),
    ( 78 , Counter({-1: 443873, 0: 93435, 2: 23955, 1: 19403, 3: 800, 4: 735, 5: 282, 6: 27, 7: 3})),
    ( 79 , Counter({-1: 459850, 1: 54783, 0: 41037, 3: 12908, 2: 7709, 6: 1988, 5: 1316, 8: 1106, 7: 1044, 4: 747, 9: 16, 10: 9})),
    ( 80 , Counter({-1: 469270, 0: 85675, 1: 7563, 8: 5997, 3: 3040, 16: 3028, 7: 1638, 13: 1452, 2: 454, 21: 447, 11: 445, 9: 394, 19: 363, 12: 315, 15: 302, 4: 296, 24: 254, 17: 250, 18: 194, 6: 174, 5: 162, 22: 159, 23: 130, 14: 80, 25: 76, 28: 68, 20: 66, 10: 61, 30: 57, 27: 42, 26: 35, 33: 8, 32: 7, 29: 6, 31: 5})),
    ( 81 , Counter({-1: 458246, 0: 68133, 1: 45876, 9: 4411, 6: 1727, 5: 1016, 8: 891, 2: 717, 3: 351, 7: 287, 10: 245, 17: 114, 15: 106, 4: 96, 13: 89, 12: 85, 16: 44, 11: 41, 14: 34, 18: 4})),
    ( 82 , Counter({-1: 438825, 1: 133184, 0: 10504})),
    ( 83 , Counter({-1: 451322, 2: 47937, 4: 19734, 7: 16174, 5: 11605, 11: 9368, 0: 5944, 6: 4692, 10: 3169, 8: 2255, 14: 2006, 16: 1707, 1: 1662, 9: 1512, 13: 1489, 15: 929, 12: 819, 3: 130, 18: 47, 17: 12})),
    ( 84 , Counter({-1: 456608, 0: 110235, 5: 4052, 4: 3947, 3: 2943, 2: 2200, 1: 2082, 8: 152, 7: 149, 6: 145})),
    ( 85 , Counter({-1: 450953, 0: 81315, 1: 28954, 3: 16443, 2: 3356, 4: 1492})),
    ( 86 , Counter({-1: 455804, 0: 113748, 2: 6679, 1: 4701, 4: 1233, 3: 182, 6: 135, 5: 31})),
    ( 87 , Counter({-1: 453013, 0: 112728, 1: 13497, 2: 2567, 3: 527, 4: 127, 5: 46, 6: 8})),
    ( 88 , Counter({-1: 445773, 1: 88085, 2: 23742, 0: 17193, 3: 7720})),
    ( 89 , Counter({-1: 449070, 1: 74953, 0: 44710, 3: 10073, 2: 3707})),
    ( 90 , Counter({-1: 441515, 0: 87094, 2: 30872, 1: 23032})),
    ( 91 , Counter({-1: 439726, 0: 39249, 1: 39070, 5: 20652, 2: 14679, 3: 14306, 4: 7978, 7: 4244, 11: 924, 10: 708, 9: 525, 12: 155, 14: 149, 13: 60, 8: 49, 6: 39})),
    ( 92 , Counter({-1: 420973, 0: 146292, 1: 11227, 2: 3304, 3: 717})),
    ( 93 , Counter({-1: 422676, 0: 95256, 2: 28773, 1: 25385, 3: 5670, 5: 1776, 4: 1331, 9: 562, 8: 551, 6: 376, 7: 127, 10: 19, 11: 10, 12: 1})),
    ( 94 , Counter({-1: 422183, 2: 94272, 1: 28601, 0: 26944, 3: 5502, 5: 1983, 4: 1354, 8: 613, 7: 526, 6: 409, 9: 103, 11: 12, 10: 11})),
    ( 95 , Counter({-1: 420088, 0: 95007, 2: 46287, 4: 11665, 3: 2936, 5: 2317, 1: 2004, 6: 1151, 7: 621, 8: 246, 10: 140, 9: 37, 11: 14})),
    ( 96 , Counter({-1: 419890, 0: 95065, 2: 47328, 1: 10767, 3: 3055, 7: 2112, 4: 2098, 5: 1160, 6: 631, 8: 225, 9: 114, 10: 44, 11: 24})),
    ( 97 , Counter({-1: 429786, 1: 103168, 3: 21667, 0: 9205, 4: 3238, 2: 3227, 6: 3138, 5: 2313, 13: 2290, 7: 2159, 8: 863, 11: 452, 12: 272, 10: 217, 9: 199, 15: 158, 14: 157, 16: 2, 17: 2})),
    ( 98 , Counter({-1: 433666, 0: 123153, 1: 14784, 3: 4108, 2: 3742, 4: 3060})),
    ( 99 , Counter({-1: 432588, 1: 41747, 0: 37588, 4: 24988, 2: 22684, 5: 13380, 3: 7232, 6: 2306})),
    ( 100 , Counter({-1: 430511, 1: 124260, 0: 17724, 2: 3716, 3: 3052, 4: 2378, 5: 369, 7: 267, 6: 236})),
    ( 101 , Counter({-1: 424246, 0: 112809, 1: 45458})),
    ( 102 , Counter({-1: 401938, 0: 156214, 1: 10353, 2: 4927, 3: 4390, 4: 1839, 6: 1710, 7: 530, 5: 264, 8: 246, 9: 102})),
    ( 103 , Counter({-1: 420727, 2: 67078, 0: 40642, 3: 27512, 1: 23183, 4: 2654, 5: 579, 6: 87, 7: 51})),
    ( 104 , Counter({-1: 389495, 2: 125073, 0: 34750, 1: 20462, 3: 9837, 4: 2846, 5: 50})),
    ( 105 , Counter({-1: 351145, 1: 78216, 0: 77807, 3: 67978, 2: 6626, 4: 286, 5: 227, 7: 130, 6: 98})),
    ( 106 , Counter({-1: 351191, 3: 143251, 0: 31082, 1: 25002, 4: 24605, 2: 3868, 5: 3035, 6: 395, 7: 84})),
    ( 107 , Counter({-1: 355005, 1: 140432, 2: 68244, 0: 16402, 3: 2430})),
    ( 108 , Counter({-1: 352874, 0: 163500, 1: 26269, 5: 19719, 13: 13669, 3: 3120, 2: 2079, 4: 944, 6: 314, 11: 12, 8: 4, 9: 4, 7: 3, 10: 1, 12: 1})),
    ( 109 , Counter({-1: 342416, 0: 177028, 2: 40371, 3: 8936, 5: 6355, 4: 3522, 1: 3347, 6: 538})),
    ( 110 , Counter({-1: 344355, 0: 231798, 1: 4822, 4: 544, 2: 449, 5: 407, 3: 138})),
    ( 111 , Counter({0: 424442, 1: 71998, -1: 59231, 3: 24928, 2: 942, 7: 338, 8: 291, 4: 121, 5: 97, 6: 36, 10: 23, 11: 21, 12: 18, 9: 16, 14: 5, 13: 3, 15: 3})),
    ( 112 , Counter({0: 317229, 2: 103871, 7: 63265, -1: 26390, 6: 20016, 3: 13387, 1: 9906, 8: 7915, 9: 7291, 4: 5682, 15: 1617, 12: 1368, 18: 1181, 13: 985, 14: 607, 23: 512, 22: 311, 21: 231, 10: 197, 5: 143, 16: 136, 11: 96, 24 : 91, 19: 47, 17: 22, 20: 15, 25: 2}))]

nums_cats = pu.load('dataset/number_of_categories_200.pkl.gz')['categorical_ts']
for ((i, count), n_cats) in zip(l, nums_cats):
    a = np.zeros(n_cats, dtype=np.int)
    for j in range(n_cats):
        if j in count:
            a[j] = count[j]
    pu.dump(a, 'interpolation/counts_cat_{:d}.pkl.gz'.format(i))
